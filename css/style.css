@charset "UTF-8";
/*
COLORS:
Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485
*/
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box; }

html {
  /*100% -> 16px
      62.5% -> 10px*/
  font-size: 62.5%; }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777;
  padding: 3rem; }

/*keyframes : CSS 애니메이션과 트랜지션 방식의 주된 차이는 @keyframes rule에 있다. 
이 rule을 사용하면 애니메이션의 흐름(sequence) 중의 여러 시점(breakpoint)에서 CSS 프로퍼티값을 지정할 수 있다.*/
@keyframes moveInLeft {
  0% {
    /*inital : 왼쪽 100px에서 시작*/
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    /*오른쪽 10px갔다가*/
    transform: translate(1rem); }
  100% {
    /*final : 원래자리로 복귀*/
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    /*inital*/
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    /*final*/
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottom {
  0% {
    /*inital*/
    opacity: 0;
    transform: translateY(3rem); }
  80% {
    transform: translateY(-1rem); }
  100% {
    /*final*/
    opacity: 1;
    transform: translate(0); } }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /*backface-visibility는 요소의 뒷쪽에서 앞면이 보이게 할지 정하는 속성입니다.*/
  backface-visibility: hidden;
  margin-bottom: 6rem; }
  .heading-primary--main {
    /*span은 기본이 inline이라서 줄바꿈해주기 위해서 block*/
    display: block;
    font-size: 6rem;
    font-weight: 400;
    /*글자 사이 간격*/
    letter-spacing: 3.5rem;
    /*왼쪽에서 이동하는 애니메이션 설정*/
    animation-name: moveInLeft;
    animation-duration: 3s; }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    /*오른쪽에서 이동하는 애니메이션 설정*/
    animation-name: moveInRight;
    animation-duration: 3s; }

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  background-image: linear-gradient(to right, #55c57a, #28b485);
  -webkit-background-clip: text;
  color: transparent;
  letter-spacing: 0.2rem;
  transition: all 0.2s; }
  .heading-secondary:hover {
    transform: skewY(2deg) skewX(15deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(:last-child) {
    margin-bottom: 3rem; }

.u-center-text {
  text-align: center; }

.u-margin-bottom-big {
  margin-bottom: 8rem; }

.u-margin-bottom-small {
  margin-bottom: 2rem; }

.u-margin-bottom-medium {
  margin-bottom: 4rem; }

.u-margin-top-big {
  margin-top: 8rem; }

.btn {
  /*link: 방문전 링크상태
  visited: 방문후 링크상태*/
  /*active는 클릭했을때*/
  /*가상요소. 별도의 css를 지정하지 않아도 지정한 것 처럼 선택할 수 있다. 가상클래스처럼 선택자에 추가되며
  존재하지 않는 요소를 존재하는 것처럼 부여하여 문서의 특정 부분 선택이 가능하다.
  그중 ::after는 요소의 끝부분에 콘텐츠 추가*/ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    /*transition은 속성을 서서히 변화시키는 속성입니다.*/
    transition: all 0.2s;
    /*btn안에 가상요소가 absolute를 사용해서 relative사용*/
    position: relative;
    font-size: 1.6rem; }
  .btn:hover {
    /*마이너스가 올라가는 방향임*/
    transform: translateY(-3px);
    /*horizon offset - vertical offset - Blur - */
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
    /*가상요소에 대한 hover설정*/ }
    .btn:hover::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0; }
  .btn:active {
    transform: translateY(-1px);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn--white {
    background-color: #fff;
    color: #777; }
    .btn--white::after {
      background-color: #fff; }
  .btn--green {
    background-color: #7ed56f;
    color: #fff; }
    .btn--green::after {
      background-color: #7ed56f; }
  .btn::after {
    /*가짜속성이다. 왜냐하면 HTML문서에 정보로 포함되지 않는 요소를 CSS에서 새롭게 생성하기 때문이다*/
    content: '';
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    /*무조건 뒤에숨기*/
    z-index: -1;
    transition: all 0.4s; }
  .btn--animated {
    /*아래에서 올라가는 애니메이션 설정*/
    animation-name: moveInBottom;
    animation-duration: 3s;
    /*backwards : 애니메이션의 스타일을 애니메이션이 실제로 시작되기 전에 미리 적용합니다*/
    animation-fill-mode: backwards; }

.btn-text:link, .btn-text:visited {
  font-size: 1.6rem;
  color: #7ed56f;
  display: inline-block;
  text-decoration: none;
  border-bottom: 1px solid #7ed56f;
  padding: 3px;
  transition: all 0.2s; }

.btn-text:hover {
  background-color: #7ed56f;
  color: #fff;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(-2px); }

.btn-text:active {
  box-shadow: 0 0.5rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(0px); }

.composition {
  position: relative; }
  .composition__photo {
    width: 55%;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
    border-radius: 2px;
    position: absolute;
    z-index: 10;
    transition: all 0.5s;
    outline-offset: 2rem; }
    .composition__photo--p1 {
      left: 0;
      top: -2rem; }
    .composition__photo--p2 {
      right: 0;
      top: 2rem; }
    .composition__photo--p3 {
      left: 20%;
      top: 10rem; }
    .composition__photo:hover {
      outline: 1.5rem solid #7ed56f;
      transform: scale(1.05) translateY(-0.5rem);
      box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
      z-index: 20; }
  .composition:hover .composition__photo:not(:hover) {
    transform: scale(0.9); }

.feature-box {
  background-color: rgba(255, 255, 255, 0.8);
  font-size: 1.5rem;
  padding: 2.5rem;
  text-align: center;
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  transition: all 0.3s; }
  .feature-box__icon {
    font-size: 6rem;
    margin-bottom: 0.5rem;
    background-image: linear-gradient(to right, #55c57a, #28b485);
    -webkit-background-clip: text;
    color: transparent; }
  .feature-box:hover {
    transform: translateY(-1.5rem) scale(1.03); }

.card {
  perspective: 150rem;
  -moz-perspective: 150rem;
  position: relative;
  height: 52rem; }
  .card__side {
    height: 52rem;
    transition: all 0.8s ease;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    backface-visibility: hidden;
    border-radius: 10px;
    overflow: hidden;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15); }
    .card__side--front {
      background-color: #fff; }
    .card__side--back {
      transform: rotateY(180deg); }
      .card__side--back-1 {
        background-image: linear-gradient(to right bottom, #ffb900, #ff7730); }
      .card__side--back-2 {
        background-image: linear-gradient(to right bottom, #55c57a, #28b485); }
      .card__side--back-3 {
        background-image: linear-gradient(to right bottom, #2998ff, #5643fa); }
  .card:hover .card__side--front {
    transform: rotateY(180deg); }
  .card:hover .card__side--back {
    transform: rotateY(0); }
  .card__picture {
    background-size: cover;
    height: 23rem;
    background-blend-mode: screen;
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%); }
    .card__picture--1 {
      background-image: linear-gradient(to right bottom, #ffb900, #ff7730), url(../../img/nat-5.jpg); }
    .card__picture--2 {
      background-image: linear-gradient(to right bottom, #55c57a, #28b485), url(../../img/nat-6.jpg); }
    .card__picture--3 {
      background-image: linear-gradient(to right bottom, #2998ff, #5643fa), url(../../img/nat-7.jpg); }
  .card__heading {
    font-size: 2.8rem;
    font-weight: 300;
    text-transform: uppercase;
    color: #fff;
    text-align: right;
    position: absolute;
    top: 12rem;
    right: 2rem;
    width: 75%; }
  .card__heading-span {
    padding: 1rem 1.5rem;
    -webkit-box-decoration-break: clone;
    box-decoration-break: clone; }
    .card__heading-span--1 {
      background-image: linear-gradient(to right bottom, rgba(255, 185, 0, 0.85), rgba(255, 119, 48, 0.85)); }
    .card__heading-span--2 {
      background-image: linear-gradient(to right bottom, rgba(85, 197, 122, 0.85), rgba(40, 180, 133, 0.85)); }
    .card__heading-span--3 {
      background-image: linear-gradient(to right bottom, rgba(41, 152, 255, 0.85), rgba(86, 67, 250, 0.85)); }
  .card__details {
    padding: 3rem; }
    .card__details ul {
      list-style: none;
      width: 80%;
      margin: 0 auto; }
      .card__details ul li {
        text-align: center;
        font-size: 1.5rem;
        padding: 1rem; }
        .card__details ul li:not(:last-child) {
          border-bottom: 1px solid #eee; }
  .card__cta {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 90%;
    text-align: center; }
  .card__price-box {
    color: #fff;
    margin-bottom: 8rem; }
  .card__price-only {
    font-size: 1.4rem;
    text-transform: uppercase; }
  .card__price-value {
    font-size: 6rem;
    font-weight: 100%; }

.story {
  width: 75%;
  margin: 0 auto;
  box-shadow: 0 3rem 6rem rgba(0, 0, 0, 0.1);
  background-color: rgba(255, 255, 255, 0.6);
  border-radius: 3px;
  padding: 6rem;
  padding-left: 9rem;
  font-size: 1.6rem;
  transform: skewX(-12deg); }
  .story__shape {
    width: 15rem;
    height: 15rem;
    float: left;
    -webkit-shape-outside: circle(50% at 50% 50%);
    shape-outside: circle(50% at 50% 50%);
    -webkit-clip-path: circle(50% at 50% 50%);
    clip-path: circle(50% at 50% 50%);
    transform: translateX(-3rem) skewX(12deg);
    position: relative; }
  .story__image {
    height: 100%;
    transform: translateX(-4rem) scale(1.4);
    transition: all 0.5s;
    backface-visibility: hidden; }
  .story__text {
    transform: skewX(12deg); }
  .story__caption {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, 20%);
    color: #fff;
    text-transform: uppercase;
    font-size: 1.7rem;
    text-align: center;
    opacity: 0;
    transition: all 0.5s;
    backface-visibility: hidden; }
  .story:hover .story__caption {
    opacity: 1;
    transform: translate(-50%, -50%); }
  .story:hover .story__image {
    transform: translateX(-4rem) scale(1);
    filter: blur(3px) brightness(80%); }

.bg-video {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: -1;
  opacity: 0.15; }
  .bg-video__content {
    height: 100%;
    width: 100%;
    object-fit: cover; }

.header {
  /*vh : 반응형 웹디자인은 화면의 크기에 동적으로 대응하기 위해 % 단위를 자주 사용한다. 
      하지만 % 단위는 em과 같이 상속에 의해 부모 요소에 상대적 영향을 받는다.
      Viewport 단위는 상대적인 단위로 viewport를 기준으로 한 상대적 사이즈를 의미한다.*/
  height: 95vh;
  /*to right bottom쪽으로, 즉 우하단 쪽으로 밝은 초록색에서 어두운 초록색으로 그라디언트하게*/
  background-image: linear-gradient(to right bottom, rgba(85, 197, 122, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  /*cover : 배경이미지의 크기 비율을 유지한 상태에서 부모 요소의 width, height 중 큰값에 배경이미지를 맞춘다. 
    따라서 이미지의 일부가 보이지 않을 수 있다.*/
  background-size: cover;
  /*position: 일반적으로 background-image는 좌상단부터 이미지를 출력한다. 
    이때 background-position 프로퍼티를 사용하면 이미지의 좌표(xpos, ypos)를 지정 할 수 있다.*/
  background-position: top;
  /* 이미지 보이는 영역설정 : 좌상단 - 우상단 - 우하단 - 좌우단 순서로 xy좌표 설정
    https://bennettfeely.com/clippy/ */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  /*logo-box때문에 relative로 지정해줌.*/
  position: relative; }
  .header__logo-box {
    /*부모 요소 또는 가장 가까이 있는 조상 요소(static 제외)를 기준으로 좌표 프로퍼티(top, bottom, left, right)만큼 이동한다. 
          즉, relative, absolute, fixed 프로퍼티가 선언되어 있는 부모 또는 조상 요소를 기준으로 위치가 결정된다.*/
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    /*absolute가 생각보다 꽤 유용한듯.*/
    position: absolute;
    top: 40%;
    left: 50%;
    /* 50%, 50%만큼 이동시켰다가 다시 거기서 -50%, -50%만큼 이동시켜버리네. 그래서 정확히 가운데가 됨. 이건 개꿀팀이다. */
    transform: translate(-50%, -50%);
    text-align: center; }

.row {
  max-width: 114rem;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    clear: both;
    display: table; }
  .row [class^="col-"] {
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem) / 3); }
  .row .col-2-of-3 {
    width: calc( 2 * ((100% - 2 * 6rem) / 3) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem) / 4); }
  .row .col-2-of-4 {
    width: calc( 2 * ((100% - 3 * 6rem) / 4) + 6rem); }
  .row .col-3-of-4 {
    width: calc( 3 * ((100% - 3 * 6rem) / 4) + 2 * 6rem); }

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh; }

.section-features {
  padding: 20rem 0;
  background-image: linear-gradient(to right bottom, rgba(85, 197, 122, 0.8), rgba(40, 180, 133, 0.8)), url(../img/nat-4.jpg);
  background-size: cover;
  transform: skewY(-7deg);
  margin-top: -10rem; }
  .section-features > * {
    transform: skewY(7deg); }

.section-tours {
  background-color: #f7f7f7;
  padding: 25rem 0 15rem 0;
  margin-top: -10rem; }

.section-stories {
  position: relative;
  padding: 15rem 0; }
