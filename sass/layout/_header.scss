.header {
  /*vh : 반응형 웹디자인은 화면의 크기에 동적으로 대응하기 위해 % 단위를 자주 사용한다. 
      하지만 % 단위는 em과 같이 상속에 의해 부모 요소에 상대적 영향을 받는다.
      Viewport 단위는 상대적인 단위로 viewport를 기준으로 한 상대적 사이즈를 의미한다.*/
  height: 95vh;
  /*to right bottom쪽으로, 즉 우하단 쪽으로 밝은 초록색에서 어두운 초록색으로 그라디언트하게*/
  background-image: linear-gradient(
      to right bottom,
      rgba($color-primary-light, 0.8),
      rgba($color-primary-dark, 0.8)
    ),
    url(../img/hero.jpg);
  /*cover : 배경이미지의 크기 비율을 유지한 상태에서 부모 요소의 width, height 중 큰값에 배경이미지를 맞춘다. 
    따라서 이미지의 일부가 보이지 않을 수 있다.*/
  background-size: cover;
  /*position: 일반적으로 background-image는 좌상단부터 이미지를 출력한다. 
    이때 background-position 프로퍼티를 사용하면 이미지의 좌표(xpos, ypos)를 지정 할 수 있다.*/
  background-position: top;
  /* 이미지 보이는 영역설정 : 좌상단 - 우상단 - 우하단 - 좌우단 순서로 xy좌표 설정
    https://bennettfeely.com/clippy/ */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  /*logo-box때문에 relative로 지정해줌.*/
  position: relative;

  &__logo-box {
    /*부모 요소 또는 가장 가까이 있는 조상 요소(static 제외)를 기준으로 좌표 프로퍼티(top, bottom, left, right)만큼 이동한다. 
          즉, relative, absolute, fixed 프로퍼티가 선언되어 있는 부모 또는 조상 요소를 기준으로 위치가 결정된다.*/
    position: absolute;
    top: 4rem;
    left: 4rem;
  }

  &__logo {
    height: 3.5rem;
  }

  &__text-box {
    /*absolute가 생각보다 꽤 유용한듯.*/
    position: absolute;
    top: 40%;
    left: 50%;
    /* 50%, 50%만큼 이동시켰다가 다시 거기서 -50%, -50%만큼 이동시켜버리네. 그래서 정확히 가운데가 됨. 이건 개꿀팀이다. */
    transform: translate(-50%, -50%);
    text-align: center;
  }
}
